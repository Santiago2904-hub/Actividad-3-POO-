import tkinter as tk
from tkinter import messagebox
import math



class NotasApp:
    """Clase principal de la aplicación GUI para el cálculo de métricas de notas."""

    def __init__(self, master):
        self.master = master
        master.title("Notas Estudiantiles")
        master.geometry("300x400")
        master.resizable(False, False)
        
        
        self.campos_notas = []
        
        
        self.promedio_var = tk.StringVar(value="Promedio = ")
        self.desviacion_var = tk.StringVar(value="Desviación estándar = ")
        self.mayor_var = tk.StringVar(value="Nota mayor = ")
        self.menor_var = tk.StringVar(value="Nota menor = ")
        
        # Crear la interfaz gráfica
        self._crear_widgets()

    def _crear_widgets(self):
        """Método para configurar todos los componentes de la GUI."""
        
        
        for i in range(5):
           
            tk.Label(self.master, text=f"Nota {i+1}:").place(x=20, y=20 + i*30, width=80, height=25)
            
            
            campo = tk.Entry(self.master)
            campo.place(x=105, y=20 + i*30, width=150, height=25)
            self.campos_notas.append(campo)

        # --- Botones ---
        
        # Botón Calcular
        btn_calcular = tk.Button(self.master, text="Calcular", command=self.calcular_metricas)
        btn_calcular.place(x=20, y=180, width=100, height=30)
        
        # Botón Limpiar
        btn_limpiar = tk.Button(self.master, text="Limpiar", command=self.limpiar_campos)
        btn_limpiar.place(x=130, y=180, width=100, height=30)

        
        
        # Promedio
        tk.Label(self.master, textvariable=self.promedio_var, anchor="w").place(x=20, y=230, width=250, height=25)
        
        # Desviación
        tk.Label(self.master, textvariable=self.desviacion_var, anchor="w").place(x=20, y=260, width=250, height=25)
        
        # Nota Mayor
        tk.Label(self.master, textvariable=self.mayor_var, anchor="w").place(x=20, y=290, width=250, height=25)
        
        # Nota Menor
        tk.Label(self.master, textvariable=self.menor_var, anchor="w").place(x=20, y=320, width=250, height=25)

    
    
    def _obtener_notas(self):
        """Intenta obtener y convertir las notas a una lista de floats."""
        notas = []
        for campo in self.campos_notas:
            valor = campo.get().strip()
            if not valor:
                raise ValueError("Debe ingresar todas las 5 notas.")
            try:
                nota = float(valor)
                if not (0 <= nota <= 10):
                    raise ValueError("Las notas deben estar entre 0 y 10.")
                notas.append(nota)
            except ValueError:
                
                raise ValueError("Solo se permiten valores numéricos válidos (ej: 4.5).")
        return notas

    def calcular_metricas(self):
        """Función que maneja el evento del botón 'Calcular' y actualiza la GUI."""
        try:
            
            notas = self._obtener_notas()
            
            # Cálculo del Promedio
            promedio = sum(notas) / len(notas)
            
            
            
            sum_diff_sq = sum((x - promedio) ** 2 for x in notas)
            
            desviacion = math.sqrt(sum_diff_sq / len(notas))
            
            # Nota Mayor y Menor
            mayor = max(notas)
            menor = min(notas)
            
           
            self.promedio_var.set(f"Promedio = {promedio:.2f}")
            self.desviacion_var.set(f"Desviación estándar = {desviacion:.2f}")
            self.mayor_var.set(f"Nota mayor = {mayor:.2f}")
            self.menor_var.set(f"Nota menor = {menor:.2f}")
            
        except ValueError as e:
            
            messagebox.showerror("Error de Entrada", str(e))
        except Exception as e:
            messagebox.showerror("Error Desconocido", f"Ocurrió un error inesperado: {e}")

    def limpiar_campos(self):
        """Función que maneja el evento del botón 'Limpiar'."""
        
        # Limpiar campos de texto de notas
        for campo in self.campos_notas:
            campo.delete(0, tk.END)
            
        # Limpiar resultados
        self.promedio_var.set("Promedio = ")
        self.desviacion_var.set("Desviación estándar = ")
        self.mayor_var.set("Nota mayor = ")
        self.menor_var.set("Nota menor = ")


if __name__ == "__main__":
    root = tk.Tk()
    app = NotasApp(root)
    root.mainloop()
